import sqlite3
from tabulate import tabulate

def analyze_data(conn):
    cursor = conn.cursor()

    print("\nüåç 1. ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ:")
    cursor.execute("SELECT region, COUNT(*) FROM countries GROUP BY region")
    print(tabulate(cursor.fetchall(), headers=["‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®)"], tablefmt="fancy_grid"))

    print("\nüë• 2. ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ:")
    cursor.execute("SELECT region, ROUND(AVG(population), 2) FROM countries GROUP BY region")
    results = [(region, f"{pop:,.2f} ‡∏Ñ‡∏ô") for region, pop in cursor.fetchall()]
    print(tabulate(results, headers=["‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ", "‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£"], tablefmt="fancy_grid"))

    print("\nüåê 3. ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å:")
    cursor.execute("SELECT name, ROUND(area, 2) FROM countries ORDER BY area DESC LIMIT 10")
    results = [(name, f"{area:,.2f} ‡∏ï‡∏£.‡∏Å‡∏°.") for name, area in cursor.fetchall()]
    print(tabulate(results, headers=["‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®", "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà"], tablefmt="fancy_grid"))

    print("\nüèôÔ∏è 4. ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö:")
    cursor.execute("""
        SELECT name, ROUND(population / area, 2)
        FROM countries
        WHERE area > 0 AND population IS NOT NULL
        ORDER BY population / area DESC
        LIMIT 10
    """)
    results = [(name, f"{density:,.2f} ‡∏Ñ‡∏ô/‡∏ï‡∏£.‡∏Å‡∏°.") for name, density in cursor.fetchall()]
    print(tabulate(results, headers=["‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®", "‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£"], tablefmt="fancy_grid"))

    print("\nüè¥ 5. ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á:")
    cursor.execute("SELECT name FROM countries WHERE capital IS NULL OR TRIM(capital) = ''")
    missing = cursor.fetchall()
    if missing:
        print(tabulate(missing, headers=["‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®"], tablefmt="fancy_grid"))
    else:
        print("‚úÖ ‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏°‡∏µ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á")

    print("\nüìè 6. ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏•‡∏Å:")
    cursor.execute("""
        SELECT name, ROUND(area, 2) FROM countries
        WHERE area > (SELECT AVG(area) FROM countries)
        ORDER BY area DESC
        LIMIT 10
    """)
    results = [(name, f"{area:,.2f} ‡∏ï‡∏£.‡∏Å‡∏°.") for name, area in cursor.fetchall()]
    print(tabulate(results, headers=["‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®", "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà"], tablefmt="fancy_grid"))
